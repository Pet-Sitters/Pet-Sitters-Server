# Generated by Django 5.0.6 on 2024-05-31 13:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Keep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(choices=[('CAT', 'Кошка'), ('DOG', 'Собака'), ('OTH', 'Другое')], default='CAT', max_length=3)),
                ('breed', models.CharField(max_length=150, null=True)),
                ('name', models.CharField(max_length=15, null=True)),
                ('gender', models.CharField(choices=[('FEM', 'Самка'), ('MAL', 'Самец')], default='MAL', max_length=3)),
                ('sterilized', models.BooleanField(default=True)),
                ('birth_year', models.DateField(null=True)),
                ('weigth', models.FloatField(default=0.0)),
                ('immunized', models.BooleanField(default=True)),
                ('vet_ppt', models.BooleanField(default=True)),
                ('emergency_contact', models.CharField(max_length=250, null=True)),
                ('disease', models.BooleanField(default=False)),
                ('features', models.TextField(max_length=700, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('otc', models.CharField(blank=True, max_length=30, null=True)),
                ('tg_name', models.CharField(max_length=15)),
                ('is_sitter', models.BooleanField(default=False)),
                ('city', models.CharField(choices=[('EVN', 'Ереван'), ('DLN', 'Дилижан'), ('GMR', 'Гюмри'), ('MOW', 'Москва'), ('SPB', 'Санкт-Петербург'), ('OTH', 'Другое')], default='EVN', max_length=3)),
                ('address', models.CharField(max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=0.0)),
                ('notes', models.TextField(max_length=500, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.pet')),
            ],
        ),
        migrations.CreateModel(
            name='Sitter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(null=True)),
                ('social', models.URLField(null=True)),
                ('about', models.TextField(null=True)),
                ('animals', models.CharField(choices=[('CAT', 'Кошка'), ('DOG', 'Собака'), ('OTH', 'Другое'), ('NO', 'Нет')], default='NO', max_length=3)),
                ('passport', models.IntegerField(null=True)),
                ('ppt_img', models.ImageField(null=True, upload_to='passports/')),
                ('avatar', models.ImageField(null=True, upload_to='avatars/')),
                ('rating', models.FloatField(default=0.0)),
                ('game', models.BooleanField(default=False)),
                ('activated', models.BooleanField(default=False)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
